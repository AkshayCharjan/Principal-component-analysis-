# -*- coding: utf-8 -*-
"""2_iiii.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1T751NSOZ8g5h0MvpDNU5R4S37rmIPZwt
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

file= pd.read_csv("./Dataset.csv",header=None,float_precision='round_trip')

plt.scatter(file[0], file[1])
plt.title("Data points")
plt.xlabel("x values")
plt.ylabel("y values")
plt.show()

mean_x=file[0].mean()
mean_y=file[1].mean()

file[0]=file[0] - mean_x
file[1]=file[1] - mean_y

def convert(x,y):
    xty=np.dot(x,y)
    return (1+xty)**3

X=file.transpose()

K = np.zeros((1000, 1000))
for i in range (0 ,1000):
    for j in range (i, 1000):
        K[i][j]=convert(X[i],X[j])
        K[j][i]=K[i][j]

#Data Centering 
I=np.identity(1000)
M=I-(1/1000)
MK=np.dot(M,K)
MKM=np.dot(MK,M) #centered_K

from numpy.lib.twodim_base import triu_indices
e_values, e_vectors = np.linalg.eig(MKM)
z=e_values, e_vectors
e_v=e_vectors.transpose() #[[w1x w1y][w2x w2y]]
pair=[]
for i in range(0,1000):
  t=e_values[i],e_v[i]
  pair.append(t)
pair.sort(reverse=True)

#H Matrix
H=[]
for i in range (0,4):
  H.append(pair[i][1])

H=np.array(H)   #(4x1000)
H=H.transpose() #(1000x4)

cluster=np.zeros(1000)
for i in range (0,1000):
  cluster[i]=np.argmax(H[i])

X_=file.transpose()
for i in range(0,1000):
    if(cluster[i]==0):
        plt.scatter(X_[i][0],X_[i][1],color = '#88c999' )
        
    if(cluster[i]==1):
        plt.scatter(X_[i][0],X_[i][1],color = 'red' )
        
    if(cluster[i]==2):
        plt.scatter(X_[i][0],X_[i][1],color = 'purple' )
       
    if(cluster[i]==3):
        plt.scatter(X_[i][0],X_[i][1],color = 'green' )
      
plt.xlabel("x values")
plt.ylabel("y values")

plt.title("Clustering")
plt.show()

